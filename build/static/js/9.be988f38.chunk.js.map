{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","assets/img/brand/IntegraPotencia_gray.png","views/Pages/Login/Login.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__webpack_require__","d","__webpack_exports__","module","exports","p","Login","state","loging","logingText","email","password","error","errorMessage","viewReset","passwordChange1","passwordChange2","onChange","name","_this","setState","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","login","_callee","e","isReset","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","preventDefault","feathers","service","find","query","user","sent","console","log","auth","t0","message","stop","this","changePassword","_callee2","_context2","create","alert","_this2","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","className","reactstrap__WEBPACK_IMPORTED_MODULE_9__","md","onSubmit","color","addonType","type","placeholder","autoComplete","event","target","xs","onClick","disabled","style","display","width","src","Logo_gray","Component"],"mappings":"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","file":"static/js/9.be988f38.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","module.exports = __webpack_public_path__ + \"static/media/IntegraPotencia_gray.1d7fcfb6.png\";","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardGroup,\n  Col,\n  Container,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row,\n  Alert,\n} from 'reactstrap';\nimport feathers from '../../../feathers';\nimport auth from '../../../auth';\nimport Logo_gray\n  from '../../../../src/assets/img/brand/IntegraPotencia_gray.png';\nimport './Login.css';\n\nclass Login extends Component {\n  state = {\n    loging: false,\n    logingText: 'Ingresar',\n    email: '',\n    password: '',\n    error: false,\n    errorMessage: 'Error',\n    viewReset: false,\n    passwordChange1: '',\n    passwordChange2: '',\n  };\n\n  async componentWillMount () {}\n\n  onChange = (name, value) => {\n    this.setState ({\n      [name]: value,\n    });\n  };\n\n  login = async e => {\n    e.preventDefault ();\n    this.setState ({\n      loging: true,\n      logingText: 'Ingresando...',\n    });\n\n    let isReset = await feathers.service ('is-user-reset').find ({\n      query: {\n        user: this.state.email,\n        password: this.state.password,\n      },\n    });\n\n    console.log ('isReset', isReset);\n\n    try {\n      if (isReset) {\n        //isReset\n        this.setState ({\n          viewReset: true,\n          error: false,\n          errorMessage: '',\n        });\n      } else {\n        await auth.login (this.state.email, this.state.password);\n      }\n    } catch (err) {\n      console.log ('err', err.message);\n      if (err.message == 'Missing credentials') {\n        this.setState ({\n          error: true,\n          errorMessage: 'No capturaste las claves',\n          loging: false,\n          logingText: 'Ingresar',\n        });\n      }\n      if (err.message == 'Invalid login') {\n        this.setState ({\n          error: true,\n          errorMessage: 'Correo o contraseña incorrectas',\n          loging: false,\n          logingText: 'Ingresar',\n        });\n      }\n      if (err.message == 'Authentication timed out') {\n        this.setState ({\n          error: true,\n          errorMessage: 'Error',\n          loging: false,\n          logingText: 'Ingresar',\n        });\n      }\n    }\n  };\n\n  changePassword = async () => {\n    if (this.state.passwordChange1 === this.state.passwordChange2) {\n      let changePassword = await feathers.service ('is-user-reset').create ({\n        user: this.state.email,\n        password: this.state.passwordChange1,\n      });\n      alert ('Contraseña cambiada, reingrese nuevamente.');\n      this.setState ({\n        viewReset: false,\n        email: '',\n        password: '',\n        passwordChange1: '',\n        passwordChange2: '',\n        loging: false,\n        logingText: 'Ingresar',\n      });\n      console.log ('Cambio Password', changePassword);\n    } else {\n      alert ('Las contraseñas no son iguales');\n    }\n  };\n\n  //TODO EDSON - Implementar manual de identidad en la interfaz del login, agregar logo y colores.\n  render () {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center \">\n            <Col md=\"8\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form onSubmit={this.login}>\n                      <div>\n                        {this.state.viewReset\n                          ? <div>\n                              <h1>Cambiar password</h1>\n\n                              <p className=\"text-muted\">\n                                Cambia el password con alguno que recuerdes\n                              </p>\n                              {this.state.error\n                                ? <Row>\n                                    <Col md={12}>\n                                      <Alert color=\"danger\">\n                                        {this.state.errorMessage}\n                                      </Alert>\n                                    </Col>\n                                  </Row>\n                                : null}\n                              <InputGroup className=\"mb-3\">\n                                <InputGroupAddon addonType=\"prepend\">\n                                  <InputGroupText>\n                                    <i className=\"icon-lock\" />\n                                  </InputGroupText>\n                                </InputGroupAddon>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contraseña\"\n                                  autoComplete=\"username\"\n                                  value={this.state.passwordChange1}\n                                  onChange={event => {\n                                    this.onChange (\n                                      'passwordChange1',\n                                      event.target.value\n                                    );\n                                  }}\n                                />\n                              </InputGroup>\n                              <InputGroup className=\"mb-4\">\n                                <InputGroupAddon addonType=\"prepend\">\n                                  <InputGroupText>\n                                    <i className=\"icon-lock\" />\n                                  </InputGroupText>\n                                </InputGroupAddon>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Repite contraseña\"\n                                  autoComplete=\"current-password\"\n                                  value={this.state.passwordChange2}\n                                  onChange={event => {\n                                    this.onChange (\n                                      'passwordChange2',\n                                      event.target.value\n                                    );\n                                  }}\n                                />\n                              </InputGroup>\n\n                              <Row>\n                                <Col xs=\"6\">\n                                  <Button\n                                    color=\"primary\"\n                                    className=\"px-4\"\n                                    onClick={this.changePassword}\n                                  >\n                                    Cambiar password\n                                  </Button>\n                                </Col>\n                              </Row>\n                            </div>\n                          : <div>\n                              <h1>Ingresar</h1>\n\n                              <p className=\"text-muted\">\n                                Captura los datos correctos\n                              </p>\n                              {this.state.error\n                                ? <Row>\n                                    <Col md={12}>\n                                      <Alert color=\"danger\">\n                                        {this.state.errorMessage}\n                                      </Alert>\n                                    </Col>\n                                  </Row>\n                                : null}\n                              <InputGroup className=\"mb-3\">\n                                <InputGroupAddon addonType=\"prepend\">\n                                  <InputGroupText>\n                                    <i className=\"icon-user\" />\n                                  </InputGroupText>\n                                </InputGroupAddon>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Usuario\"\n                                  autoComplete=\"username\"\n                                  value={this.state.email}\n                                  onChange={event => {\n                                    this.onChange ('email', event.target.value);\n                                  }}\n                                />\n                              </InputGroup>\n                              <InputGroup className=\"mb-4\">\n                                <InputGroupAddon addonType=\"prepend\">\n                                  <InputGroupText>\n                                    <i className=\"icon-lock\" />\n                                  </InputGroupText>\n                                </InputGroupAddon>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Contraseña\"\n                                  autoComplete=\"current-password\"\n                                  value={this.state.password}\n                                  onChange={event => {\n                                    this.onChange (\n                                      'password',\n                                      event.target.value\n                                    );\n                                  }}\n                                />\n                              </InputGroup>\n\n                              <Row>\n                                <Col xs=\"6\">\n                                  <Button\n                                    color=\"primary\"\n                                    className=\"px-4\"\n                                    onClick={this.login}\n                                    disabled={this.state.loging}\n                                  >\n                                    {this.state.logingText}\n                                  </Button>\n                                  <input\n                                    type=\"submit\"\n                                    style={{\n                                      display: 'none',\n                                    }}\n                                  />\n                                </Col>\n                                {/* <Col xs=\"6\" className=\"text-right\">\n                          <Button color=\"link\" className=\"px-0\">\n                            Forgot password?\n                          </Button>\n                        </Col> */}\n                              </Row>\n                            </div>}\n                      </div>\n                    </Form>\n                  </CardBody>\n                </Card>\n                <Card\n                  className=\"text-white bg-primary py-5 d-md-down-none\"\n                  style={{width: '44%'}}\n                >\n                  <CardBody className=\"text-center\">\n                    <div>\n                      <img src={Logo_gray} className=\"Logo\" width=\"200px\" />\n                    </div>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"],"sourceRoot":""}