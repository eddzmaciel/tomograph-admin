{"version":3,"sources":["views/DistributionDivision/DistributionDivisionForm.js"],"names":["TransferableFixedForm","props","_this2","Object","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","getOptionsSelect","_ref","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","name","url","optionCreateFunction","response","options","wrap","_context","prev","next","axios","get","sent","data","map","option","push","setState","distributionDivisions","stop","_x","_x2","_x3","apply","arguments","onChange","path","value","newFormData","immutable","set","state","formData","onAdd","_ref2","_callee2","_this","tfResult","_context2","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","form","reportValidity","id","feathers","service","create","console","log","undefined","_id","window","location","href","patch","_x4","match","params","total","distributionDivision","technicalLoss","technicalNoLoss","openSuccess","find","query","findTF","label","nombre","_this3","_this$state","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","className","ref","reactstrap__WEBPACK_IMPORTED_MODULE_9__","col","sm","md","onClick","color","xs","lg","size","offset","htmlFor","react_select__WEBPACK_IMPORTED_MODULE_14__","placeholder","o","event","type","target","Component"],"mappings":"0QAmBMA,cACJ,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAOJ,KA+CTQ,iBAhDoB,eAAAC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAgDD,SAAAC,EAAOC,EAAMC,EAAKC,GAAlB,IAAAC,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIC,IAAMC,IAAKT,GADf,OACbE,EADaG,EAAAK,KAEbP,EAAU,GACdD,EAASS,KAAKC,IAAK,SAAAC,GACjBV,EAAQW,KAAMb,EAAsBY,MAEtC5B,EAAK8B,SAAU,CACbC,sBAAuBb,IAPR,wBAAAE,EAAAY,SAAAnB,EAAAV,SAhDC,gBAAA8B,EAAAC,EAAAC,GAAA,OAAA3B,EAAA4B,MAAAjC,KAAAkC,YAAA,GAAArC,EA2DpBsC,SAAW,SAACC,EAAMC,GAChB,IAAIC,EAAcC,IAAUC,IAAK3C,EAAK4C,MAAMC,SAAUN,EAAMC,GAE5DxC,EAAK8B,SAAU,CACbe,SAAUJ,KA/DMzC,EAmEpB8C,MAnEoB,eAAAC,EAAA9C,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAmEZ,SAAAoC,EAAMH,GAAN,IAAAI,EAAAC,EAAA,OAAAxC,EAAAC,EAAAQ,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,UACF2B,EADEhD,OAAAmD,EAAA,EAAAnD,QAAAmD,EAAA,EAAAnD,CAAAD,KAEFA,EAAKqD,KAAKC,iBAFR,CAAAH,EAAA7B,KAAA,YAGiB,QAAjBtB,EAAK4C,MAAMW,GAHX,CAAAJ,EAAA7B,KAAA,gBAAA6B,EAAA7B,KAAA,EAImBkC,IAClBC,QAAS,yBACTC,OAAQT,EAAML,MAAMC,UANrB,OAIEK,EAJFC,EAAA1B,KAOFkC,QAAQC,IAAK,WAAYV,QACLW,GAAhBX,EAASY,MACXC,OAAOC,SAASC,KAAO,4BATvBd,EAAA7B,KAAA,wBAAA6B,EAAA7B,KAAA,GAYmBkC,IAClBC,QAAS,yBACTS,MAAOjB,EAAML,MAAMW,GAAIN,EAAML,MAAMC,UAdpC,aAekBgB,GAflBV,EAAA1B,KAeWqC,MACXC,OAAOC,SAASC,KAAO,4BAhBvB,yBAAAd,EAAAnB,SAAAgB,EAAA7C,SAnEY,gBAAAgE,GAAA,OAAApB,EAAAX,MAAAjC,KAAAkC,YAAA,GAElBrC,EAAK4C,MAAQ,CACXW,GAAIxD,EAAMqE,MAAMC,OAAOd,GACvB7B,KAAM,GACN4C,MAAO,EACPzB,SAAU,CACR0B,qBAAsB,GACtBC,cAAe,GACfC,gBAAiB,IAEnB1C,sBAAuB,GACvB2C,aAAa,GAZG1E,uMAiBlB2D,QAAQC,IAAK,KAAMzD,KAAKyC,MAAMW,IAC1BN,EAAQ9C,KAES,QAAjBA,KAAKyC,MAAMW,mCACMC,IAASC,QAAS,yBAAyBkB,KAAM,CAClEC,MAAO,CACLd,IAAKb,EAAML,MAAMW,aAFjBsB,SAMJ1E,KAAK2B,SAAU,CACbe,SAAU,CACR0B,qBAAsBM,EAAOnD,KAAK,GAAG6C,qBACrCC,cAAeK,EAAOnD,KAAK,GAAG8C,cAC9BC,gBAAiBI,EAAOnD,KAAK,GAAG+C,0BAKtCtE,KAAKI,iBACH,wBACA,qCACA,SAAAqB,GACE,MAAO,CACLkD,MAAOlD,EAAOmD,OACdvC,MAAOZ,EAAOmD,6IA+CZ,IAGcxB,EAHdyB,EAAA7E,KAAA8E,EAE6C9E,KAAKyC,MAArDC,EAFGoC,EAEHpC,SAAuBd,GAFpBkD,EAEOP,YAFPO,EAEoBlD,uBAI5B,OACEmD,EAAAvE,EAAAwE,cAAA,OAAKC,UAAU,mBACbF,EAAAvE,EAAAwE,cAAA,QAAME,IAAK,SAAAA,GAAG,OAAKL,EAAK3B,KAAOgC,GAAMD,UAAU,mBAC7CF,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,KACEJ,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,CAAKC,IAAI,KAAKC,GAAG,KAAKC,GAAG,MACvBP,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,CACEI,QAASvF,KAAK2C,MACd6C,MAAM,UACNP,UAAU,yBAEVF,EAAAvE,EAAAwE,cAAA,KAAGC,UAAU,eALf,cASJF,EAAAvE,EAAAwE,cAAA,WACAD,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,KACEJ,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,CAAKM,GAAG,KAAKC,GAAI,CAACC,KAAM,EAAGC,OAAQ,IACjCb,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,KACEJ,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,YAEEJ,EAAAvE,EAAAwE,cAAA,OAAKC,UAAU,uBACbF,EAAAvE,EAAAwE,cAAA,KAAGC,UAAU,mBACbF,EAAAvE,EAAAwE,cAAA,KAAGlB,KAAK,kBAAkBmB,UAAU,sBAClCF,EAAAvE,EAAAwE,cAAA,SAAOC,UAAU,cAAjB,aAINF,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,KACEJ,EAAAvE,EAAAwE,cAAA,4CACAD,EAAAvE,EAAAwE,cAAA,WACAD,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,KACEJ,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,CAAOU,QAAQ,oBAAf,UACAd,EAAAvE,EAAAwE,cAACc,EAAA,EAAD,CACEC,YAAY,+CACZpF,KAAK,uBACL0B,OAtCIe,EAsCkBV,EAAS0B,qBArC/CxC,EAAsB4C,KAAM,SAAAwB,GAAC,OAAIA,EAAE3D,QAAUe,KAsC7BrC,QAASa,EACTO,SAAU,SAAA8D,GAAK,OACbpB,EAAK1C,SAAU,uBAAwB8D,EAAM5D,UAajD0C,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,CAAUF,UAAU,gBACVF,EAAAvE,EAAAwE,cAAA,WACZD,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,KACEJ,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,CAAOU,QAAQ,oBAAf,wBACAd,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,CACEe,KAAK,OACL9C,GAAG,gBACHzC,KAAK,gBACL0B,MAAOK,EAAS2B,cAChBlC,SAAU,SAAA8D,GAAK,OACbpB,EAAK1C,SAAU,gBAAiB8D,EAAME,OAAO9D,UAEjD0C,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,CAAUF,UAAU,gBAEtBF,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,KACEJ,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,CAAOU,QAAQ,sBAAf,2BAGAd,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,CACEe,KAAK,OACL9C,GAAG,kBACHf,MAAOK,EAAS4B,gBAChBnC,SAAU,SAAA8D,GAAK,OACbpB,EAAK1C,SAAU,kBAAmB8D,EAAME,OAAO9D,UAEnD0C,EAAAvE,EAAAwE,cAACG,EAAA,EAAD,CAAUF,UAAU,6BA5KJmB,aAwLrBzG","file":"static/js/30.df289fc2.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  FormGroup,\n  FormText,\n  Label,\n  Row,\n  Button,\n  Input,\n} from 'reactstrap';\nimport feathers from '../../feathers';\nimport axios from 'axios';\nimport immutable from 'object-path-immutable';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Select from 'react-select';\n\nclass TransferableFixedForm extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      id: props.match.params.id,\n      data: [],\n      total: 0,\n      formData: {\n        distributionDivision: '',\n        technicalLoss: '',\n        technicalNoLoss: '',\n      },\n      distributionDivisions: [],\n      openSuccess: false,\n    };\n  }\n\n  async componentWillMount () {\n    console.log ('id', this.state.id);\n    var _this = this;\n\n    if (this.state.id != 'form') {\n      var findTF = await feathers.service ('distribution-division').find ({\n        query: {\n          _id: _this.state.id,\n        },\n      });\n\n      this.setState ({\n        formData: {\n          distributionDivision: findTF.data[0].distributionDivision,\n          technicalLoss: findTF.data[0].technicalLoss,\n          technicalNoLoss: findTF.data[0].technicalNoLoss,\n        },\n      });\n    }\n\n    this.getOptionsSelect (\n      'distributionDivisions',\n      'http://mem.remoideas.mx/api/areas/',\n      option => {\n        return {\n          label: option.nombre,\n          value: option.nombre,\n        };\n      }\n    );\n  }\n\n  getOptionsSelect = async (name, url, optionCreateFunction) => {\n    var response = await axios.get (url);\n    var options = [];\n    response.data.map (option => {\n      options.push (optionCreateFunction (option));\n    });\n    this.setState ({\n      distributionDivisions: options,\n    });\n  };\n\n  onChange = (path, value) => {\n    var newFormData = immutable.set (this.state.formData, path, value);\n\n    this.setState ({\n      formData: newFormData,\n    });\n  };\n\n  onAdd = async formData => {\n    let _this = this;\n    if (this.form.reportValidity ()) {\n      if (this.state.id == 'form') {\n        let tfResult = await feathers\n          .service ('distribution-division')\n          .create (_this.state.formData);\n        console.log ('tfResult', tfResult);\n        if (tfResult._id != undefined) {\n          window.location.href = '/#/division-distribucion';\n        }\n      } else {\n        let tfResult = await feathers\n          .service ('distribution-division')\n          .patch (_this.state.id, _this.state.formData);\n        if (tfResult._id != undefined) {\n          window.location.href = '/#/division-distribucion';\n        }\n      }\n    }\n  };\n\n  render () {\n    let indexNumber = 0;\n    let {formData, openSuccess, distributionDivisions} = this.state;\n    const valueFromIdDD = id =>\n      distributionDivisions.find (o => o.value === id);\n\n    return (\n      <div className=\"animated fadeIn\">\n        <form ref={ref => (this.form = ref)} className=\"form-horizontal\">\n          <Row>\n            <Col col=\"12\" sm=\"12\" md=\"12\">\n              <Button\n                onClick={this.onAdd}\n                color=\"success\"\n                className=\"btn-square pull-right\"\n              >\n                <i className=\"fa fa-save\" /> Guardar\n              </Button>\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col xs=\"12\" lg={{size: 6, offset: 3}}>\n              <Card>\n                <CardHeader>\n                  Alta\n                  <div className=\"card-header-actions\">\n                    <i className=\"fa fa-download\" />\n                    <a href=\"http://ipco.com\" className=\"card-header-action\">\n                      <small className=\"text-muted\">Activo</small>\n                    </a>\n                  </div>\n                </CardHeader>\n                <CardBody>\n                  <h4>División de Distribución</h4>\n                  <br />\n                  <FormGroup>\n                    <Label htmlFor=\"hf-technicalLoss\">Nombre</Label>\n                    <Select\n                      placeholder=\"-- Seleccione división de distribución\"\n                      name=\"distributionDivision\"\n                      value={valueFromIdDD (formData.distributionDivision)}\n                      options={distributionDivisions}\n                      onChange={event =>\n                        this.onChange ('distributionDivision', event.value)}\n                    />\n                    {/* <Input\n                      type=\"text\"\n                      id=\"distributionDivision\"\n                      name=\"distributionDivision\"\n                      value={formData.distributionDivision}\n                      onChange={event =>\n                        this.onChange (\n                          'distributionDivision',\n                          event.target.value\n                        )}\n                    /> */}\n                    <FormText className=\"help-block\" />\n                  </FormGroup><hr />\n                  <FormGroup>\n                    <Label htmlFor=\"hf-technicalLoss\">Perdidas Técnicas</Label>\n                    <Input\n                      type=\"text\"\n                      id=\"technicalLoss\"\n                      name=\"technicalLoss\"\n                      value={formData.technicalLoss}\n                      onChange={event =>\n                        this.onChange ('technicalLoss', event.target.value)}\n                    />\n                    <FormText className=\"help-block\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label htmlFor=\"hf-technicalNoLoss\">\n                      Perdidas No Técnicas\n                    </Label>\n                    <Input\n                      type=\"text\"\n                      id=\"technicalNoLoss\"\n                      value={formData.technicalNoLoss}\n                      onChange={event =>\n                        this.onChange ('technicalNoLoss', event.target.value)}\n                    />\n                    <FormText className=\"help-block\" />\n                  </FormGroup>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default TransferableFixedForm;\n"],"sourceRoot":""}