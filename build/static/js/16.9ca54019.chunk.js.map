{"version":3,"sources":["components/Widgets/WidgetCustom.js","components/Widgets/EmptyWidget.js","views/Init/ChartEnergy.js","views/Init/Init.js","views/Init/index.js"],"names":["WidgetCustom","_this$props","this","props","className","cssModule","header","mainText","smallText","color","value","children","variant","attributes","Object","objectWithoutProperties","progress","style","card","bgColor","classes","mapToCssModules","classNames","react_default","a","createElement","reactstrap_es","assign","fontSize","Component","defaultProps","EmptyWidget","height","paddingTop","textAlign","barEnergyConsumption","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","ChartCustomAnimation","CustomTooltips","Math","ceil","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","CharEnergy","load","setState","limit","count","arrayLabels","arrayEnergy","console","log","labelsData","labelsChart","valuesChart","valuesData","setInterval","oldCharEnergy","length","push","newChartEnergySet","objectSpread","newStateEnergy","_this$state","es","options","override","css","_templateObject","brandSuccess","getStyle","brandInfo","cardChartData2","min","apply","max","tooltips","enabled","custom","maintainAspectRatio","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","stepSize","mainChart","hexToRgba","pointHoverBackgroundColor","mainChartOptsBar","intersect","mode","position","callbacks","labelColor","tooltipItem","chart","datasetIndex","legend","display","elements","point","radius","hitRadius","hoverRadius","hoverBorderWidth","Dashboard","onChangeEmpresa","getDashboardInfo","selectedEmpresa","loading","_ref","asyncToGenerator","regenerator_default","mark","_callee","id","dashboardInfo","wrap","_context","prev","next","feathers","service","get","sent","dataEnergy","loadChart","costsDifferences","invoicesHistory","powerFactorData","currentMonth","dmaxima","potencyData","stop","_x","arguments","toggle","bind","assertThisInitialized","onRadioBtnClick","dropdownOpen","radioSelected","recordSelected","empresas","energyConsumptionData","reactiveEnergyConsumptionData","find","map","empresa","_id","nombre","_this2","barCostsDifferences","numeral","undefined","costCfe","toString","format","costIpco","LoaderInfo","width","marginBottom","boxSizing","border","padding","marginTop","alignContent","alignItems","react_spinners","sizeUnit","size","xs","sm","lg","react_select_esm","placeholder","name","o","onChange","event","href","ChartEnergy","Widgets_EmptyWidget","Widgets_WidgetCustom","String","toUpperCase","md","xl","hover","responsive","item","index","key","mes","breakdown","energy","iva","powerFactor","total","marginLeft","block","onClick","onStateChart","totalSaved","aria-label","active","Init"],"mappings":"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","file":"static/js/16.9ca54019.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Card, CardBody, Progress} from 'reactstrap';\nimport classNames from 'classnames';\nimport {mapToCssModules} from 'reactstrap/lib/utils';\n\nconst propTypes = {\n  header: PropTypes.string,\n  mainText: PropTypes.string,\n  smallText: PropTypes.string,\n  color: PropTypes.string,\n  value: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  variant: PropTypes.string,\n};\n\nconst defaultProps = {\n  header: '89.9%',\n  mainText: 'Lorem ipsum...',\n  smallText: 'Lorem ipsum dolor sit amet enim.',\n  // color: '',\n  value: '25',\n  variant: '',\n};\n\nclass WidgetCustom extends Component {\n  render () {\n    const {\n      className,\n      cssModule,\n      header,\n      mainText,\n      smallText,\n      color,\n      value,\n      children,\n      variant,\n      ...attributes\n    } = this.props;\n\n    // demo purposes only\n    const progress = {style: '', color: color, value: value};\n    const card = {style: '', bgColor: ''};\n\n    if (variant === 'inverse') {\n      progress.style = 'progress-white';\n      progress.color = '';\n      card.style = 'text-white';\n      card.bgColor = 'bg-' + color;\n    }\n\n    const classes = mapToCssModules (\n      classNames (className, card.style, card.bgColor),\n      cssModule\n    );\n    progress.style = classNames ('progress-xs my-1', progress.style);\n\n    return (\n      <Card className={classes} {...attributes}>\n        <CardBody>\n          <div className=\"h4 m-0\">{header}</div>\n          <div>{mainText}</div>\n          {value != '0'\n            ? <Progress\n                className={progress.style}\n                color={progress.color}\n                value={progress.value}\n              />\n            : null}\n          <small style={{fontSize: 13}} className=\"text-muted\">\n            {smallText}\n          </small>\n          <div>{children}</div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nWidgetCustom.propTypes = propTypes;\nWidgetCustom.defaultProps = defaultProps;\n\nexport default WidgetCustom;\n","import React, { Component } from 'react';\n\nclass EmptyWidget extends Component {\n    render() {\n        return (\n            <div\n                style={{\n                    height: this.props.height || '250px',\n                    paddingTop: this.props.paddingTop || '30%',\n                    textAlign: 'center'\n                }}\n            >\n                <i className=\"fa fa-file\" style={{ fontSize: '17px' }} />\n                <p style={{ fontSize: '17px' }}>\n                    No existe información por cargar...\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default EmptyWidget;\n","import React, {Component} from 'react';\nimport {Bar, Line} from 'react-chartjs-2';\nimport {CustomTooltips} from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport feathers from '../../feathers';\n\nconst barEnergyConsumption = {\n  labels: ['', '', '', '', '', '', '', '', ''],\n  datasets: [\n    {\n      label: 'Consumo horario en KVARh',\n      backgroundColor: 'rgba(128, 204, 255, 0.4)',\n      borderColor: 'rgba(0, 138, 230, 1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(0, 138, 230, 0.4)',\n      hoverBorderColor: 'rgba(0, 138, 230, 1)',\n      data: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n    },\n  ],\n};\n\nconst mainChartOpts = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips,\n    intersect: true,\n    mode: 'index',\n    position: 'nearest',\n    callbacks: {\n      labelColor: function (tooltipItem, chart) {\n        return {\n          backgroundColor: chart.data.datasets[tooltipItem.datasetIndex]\n            .borderColor,\n        };\n      },\n    },\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          drawOnChartArea: false,\n        },\n      },\n    ],\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n          maxTicksLimit: 10,\n          stepSize: Math.ceil (280 / 10),\n          max: 280,\n        },\n      },\n    ],\n  },\n};\n\nclass ChartCustomAnimation extends Component {\n  constructor (props) {\n    super (props);\n\n    this.state = {\n      CharEnergy: {},\n      load: false,\n    };\n  }\n\n  async componentWillMount () {\n    this.setState ({CharEnergy: barEnergyConsumption, load: false});\n  }\n\n  async componentDidMount () {\n    let limit = 0;\n    let count = 0;\n    let arrayLabels = [];\n    let arrayEnergy = [];\n    let _this = this;\n\n    console.log (this.props.labelsData);\n    let labelsChart = this.props.labelsData;\n    let valuesChart = this.props.valuesData;\n\n    if (labelsChart) {\n      let intervalID = setInterval (function () {\n        let oldCharEnergy = _this.state.CharEnergy;\n        if (limit >= labelsChart.length) {\n          limit = 0;\n          count = 0;\n          arrayEnergy = [];\n          arrayLabels = [];\n        }\n\n        if (count === 9) {\n          arrayLabels.push (labelsChart[limit]);\n          arrayEnergy.push (valuesChart[limit]);\n          let newChartEnergySet = {\n            ...oldCharEnergy,\n          };\n\n          newChartEnergySet.labels = arrayLabels;\n          newChartEnergySet.datasets[0].data = arrayEnergy;\n\n          let newStateEnergy = {\n            ..._this.state,\n            CharEnergy: newChartEnergySet,\n          };\n\n          _this.setState (newStateEnergy);\n          _this.setState ({load: true});\n          arrayEnergy = [];\n          arrayLabels = [];\n          count = 0;\n        } else {\n          arrayLabels.push (labelsChart[limit]);\n          arrayEnergy.push (valuesChart[limit]);\n          count++;\n          limit++;\n        }\n      }, 400);\n    }\n  }\n\n  render () {\n    let {CharEnergy, load} = this.state;\n\n    if (load) {\n      return <Line data={CharEnergy} options={this.props.options} />;\n    } else {\n      return (\n        <div\n          style={{\n            height: '350px',\n            paddingTop: '155px',\n            textAlign: 'center',\n          }}\n        >\n          <i className=\"fa fa-refresh\" style={{fontSize: '17px'}} />\n          <p style={{fontSize: '17px'}}>Cargando...</p>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ChartCustomAnimation;\n","import React, { Component, lazy, Suspense } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport {\n    Button,\n    ButtonGroup,\n    ButtonToolbar,\n    Card,\n    CardBody,\n    CardFooter,\n    CardHeader,\n    CardTitle,\n    Col,\n    Row,\n    Table\n} from 'reactstrap';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities';\nimport WidgetCustom from '../../components/Widgets/WidgetCustom';\nimport EmptyWidget from '../../components/Widgets/EmptyWidget';\nimport feathers from '../../feathers';\nimport Select from 'react-select';\nimport ChartEnergy from './ChartEnergy';\n\nimport NumberFormat from 'react-number-format';\nimport numeral from 'numeral';\nimport { conditionallyUpdateScrollbar } from 'reactstrap/lib/utils';\n\nimport { css } from '@emotion/core';\n// First way to import\nimport { BarLoader, BeatLoader } from 'react-spinners';\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n\nconst brandPrimary = getStyle('--primary');\nconst brandSuccess = getStyle('--success');\nconst brandInfo = getStyle('--info');\nconst brandWarning = getStyle('--warning');\nconst brandDanger = getStyle('--danger');\n\nconst cardChartData2 = {\n    labels: [],\n    datasets: [\n        {\n            label: 'Historico',\n            backgroundColor: brandInfo,\n            borderColor: 'rgba(255,255,255,.55)',\n            data: []\n        }\n    ]\n};\n\nconst cardChartOpts2 = {\n    tooltips: {\n        enabled: false,\n        custom: CustomTooltips\n    },\n    maintainAspectRatio: false,\n    legend: {\n        display: false\n    },\n    scales: {\n        xAxes: [\n            {\n                gridLines: {\n                    color: 'transparent',\n                    zeroLineColor: 'transparent'\n                },\n                ticks: {\n                    fontSize: 2,\n                    fontColor: 'transparent'\n                }\n            }\n        ],\n        yAxes: [\n            {\n                display: false,\n                ticks: {\n                    display: false,\n                    min:\n                        Math.min.apply(Math, cardChartData2.datasets[0].data) -\n                        5,\n                    max:\n                        Math.max.apply(Math, cardChartData2.datasets[0].data) +\n                        5\n                }\n            }\n        ]\n    },\n    elements: {\n        line: {\n            borderWidth: 1\n        },\n        point: {\n            radius: 4,\n            hitRadius: 10,\n            hoverRadius: 4\n        }\n    }\n};\n\nvar dataE = [54, 77, 33];\nvar dataER = [44, 56, 57];\n// for (var i = 0; i <= 8; i++) {\n//   dataE.push (random (200, 270));\n//   dataER.push (random (50, 80));\n// }\n\nlet bar = {\n    labels: [\n        '11:00',\n        '12:00',\n        '13:00',\n        '14:00',\n        '15:00',\n        '16:00',\n        '17:00',\n        '18:00',\n        '19:00'\n    ],\n    datasets: [\n        {\n            label: 'Consumo horario en kWh',\n            backgroundColor: 'rgba(255,99,132,0.2)',\n            borderColor: 'rgba(255,99,132,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor: 'rgba(255,99,132,1)',\n            data: dataE\n        }\n    ]\n};\n\nconst barER = {\n    labels: [\n        '11:00',\n        '12:00',\n        '13:00',\n        '14:00',\n        '15:00',\n        '16:00',\n        '17:00',\n        '18:00',\n        '19:00'\n    ],\n    datasets: [\n        {\n            label: 'Consumo horario en KVARh',\n            backgroundColor: 'rgba(128, 204, 255, 0.4)',\n            borderColor: 'rgba(0, 138, 230, 1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(0, 138, 230, 0.4)',\n            hoverBorderColor: 'rgba(0, 138, 230, 1)',\n            data: dataER\n        }\n    ]\n};\n\nconst barAhorro = {\n    labels: ['CFE - $0.00', 'IPCO - $0.00'],\n    datasets: [\n        {\n            label: 'Costo de consumo',\n            backgroundColor: 'rgba(0, 179, 0, 0.3)',\n            borderColor: 'rgba(0, 179, 0, 1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(0, 179, 0, 0.4)',\n            hoverBorderColor: 'rgba(0, 179, 0, 1)',\n            data: [0, 0]\n        }\n    ]\n};\n\nconst options = {\n    tooltips: {\n        enabled: false,\n        custom: CustomTooltips\n    },\n    maintainAspectRatio: false,\n    scales: {\n        xAxes: [\n            {\n                gridLines: {\n                    drawOnChartArea: false\n                }\n            }\n        ],\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(25000 / 5),\n                    max: 25000\n                }\n            }\n        ]\n    }\n};\n\n// Main Chart\n\n//Random Numbers\nfunction random(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nvar elements = 27;\nvar data1 = [];\nvar data2 = [];\n\n// for (var i = 0; i <= elements; i++) {\n//   data1.push (random (13550, 18500));\n//   data2.push (random (10503, 12900));\n// }\n\nconst mainChart = {\n    labels: [\n        'Enero',\n        'Febrero',\n        'Marzo',\n        'Abril',\n        'Mayo',\n        'Junio',\n        'Julio',\n        'Agosto',\n        'Septiembre',\n        'Octubre',\n        'Noviembre',\n        'Diciembre'\n    ],\n    datasets: [\n        {\n            label: 'Costo CFE',\n            backgroundColor: hexToRgba(brandInfo, 10),\n            borderColor: brandInfo,\n            pointHoverBackgroundColor: '#fff',\n            borderWidth: 2,\n            data: data1\n        },\n        {\n            label: 'Costo IPCO',\n            backgroundColor: 'transparent',\n            borderColor: brandSuccess,\n            pointHoverBackgroundColor: '#fff',\n            borderWidth: 2,\n            data: data2\n        }\n    ]\n};\n\nconst mainChartOpts = {\n    tooltips: {\n        enabled: false,\n        custom: CustomTooltips,\n        intersect: true,\n        mode: 'index',\n        position: 'nearest',\n        callbacks: {\n            labelColor: function(tooltipItem, chart) {\n                return {\n                    backgroundColor:\n                        chart.data.datasets[tooltipItem.datasetIndex]\n                            .borderColor\n                };\n            }\n        }\n    },\n    maintainAspectRatio: false,\n    legend: {\n        display: false\n    },\n    scales: {\n        xAxes: [\n            {\n                gridLines: {\n                    drawOnChartArea: false\n                }\n            }\n        ],\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 10,\n                    stepSize: Math.ceil(280 / 10),\n                    max: 280\n                }\n            }\n        ]\n    }\n};\n\nconst mainChartOptsBar = {\n    tooltips: {\n        enabled: false,\n        custom: CustomTooltips,\n        intersect: true,\n        mode: 'index',\n        position: 'nearest',\n        callbacks: {\n            labelColor: function(tooltipItem, chart) {\n                return {\n                    backgroundColor:\n                        chart.data.datasets[tooltipItem.datasetIndex]\n                            .borderColor\n                };\n            }\n        }\n    },\n    maintainAspectRatio: false,\n    legend: {\n        display: false\n    },\n    scales: {\n        xAxes: [\n            {\n                gridLines: {\n                    drawOnChartArea: false\n                }\n            }\n        ],\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(25000 / 5),\n                    max: 25000\n                }\n            }\n        ]\n    },\n    elements: {\n        point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3\n        }\n    }\n};\n\nconst mainChartOptsER = {\n    tooltips: {\n        enabled: false,\n        custom: CustomTooltips,\n        intersect: true,\n        mode: 'index',\n        position: 'nearest',\n        callbacks: {\n            labelColor: function(tooltipItem, chart) {\n                return {\n                    backgroundColor:\n                        chart.data.datasets[tooltipItem.datasetIndex]\n                            .borderColor\n                };\n            }\n        }\n    },\n    maintainAspectRatio: false,\n    legend: {\n        display: false\n    },\n    scales: {\n        xAxes: [\n            {\n                gridLines: {\n                    drawOnChartArea: false\n                }\n            }\n        ],\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(100 / 5),\n                    max: 100\n                }\n            }\n        ]\n    }\n};\n\nconst barEnergyConsumption = {\n    labels: [],\n    datasets: [\n        {\n            label: 'Consumo horario en KVARh',\n            backgroundColor: 'rgba(128, 204, 255, 0.4)',\n            borderColor: 'rgba(0, 138, 230, 1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(0, 138, 230, 0.4)',\n            hoverBorderColor: 'rgba(0, 138, 230, 1)',\n            data: []\n        }\n    ]\n};\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n\n        this.state = {\n            loading: true,\n            dropdownOpen: false,\n            radioSelected: 2,\n            recordSelected: false,\n            empresas: [],\n            loadChart: false,\n            dataEnergy: {\n                labels: [],\n                energyConsumptionData: [],\n                reactiveEnergyConsumptionData: []\n            },\n            selectedEmpresa: '',\n            labels: [],\n            energyConsumptionData: [],\n            reactiveEnergyConsumptionData: [],\n            costsDifferences: {},\n            invoicesHistory: [],\n            powerFactorData: '',\n            currentMonth: '',\n            dmaxima: ''\n        };\n    }\n\n    async componentWillMount() {\n        var empresas = await feathers.service('subsidiary').find({});\n        empresas = empresas.data.map(empresa => {\n            return {\n                value: empresa._id,\n                label: empresa.nombre\n            };\n        });\n\n        this.setState({ empresas: empresas, CharEnergy: barEnergyConsumption });\n    }\n\n    toggle() {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    onRadioBtnClick(radioSelected) {\n        this.setState({\n            radioSelected: radioSelected\n        });\n    }\n\n    onStateChart(value) {\n        this.setState({\n            recordSelected: value\n        });\n    }\n\n    onChangeEmpresa = value => {\n        this.getDashboardInfo(value);\n        this.setState({\n            selectedEmpresa: value\n        });\n    };\n\n    loading = () => (\n        <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    );\n\n    getDashboardInfo = async id => {\n        const dashboardInfo = await feathers.service('dashboard').get(id);\n        console.log(dashboardInfo);\n        this.setState({\n            dataEnergy: dashboardInfo,\n            loadChart: true,\n            costsDifferences: dashboardInfo.costsDifferences,\n            invoicesHistory: dashboardInfo.invoicesHistory,\n            powerFactorData: dashboardInfo.powerFactorData,\n            currentMonth: dashboardInfo.currentMonth,\n            dmaxima: dashboardInfo.potencyData.dmaxima\n        });\n    };\n    render() {\n        let {\n            empresas,\n            selectedEmpresa,\n            labels,\n            dataEnergy,\n            powerFactorData,\n            loadChart,\n            reactiveEnergyConsumptionData,\n            energyConsumptionData,\n            costsDifferences,\n            invoicesHistory,\n            currentMonth,\n            dmaxima\n        } = this.state;\n        console.log('dmaxima', dmaxima);\n\n        const valueFromIdCompany = id => empresas.find(o => o.value === id);\n\n        const barCostsDifferences = {\n            labels: [\n                'CFE - $' +\n                    numeral(\n                        costsDifferences.costCfe !== undefined\n                            ? costsDifferences.costCfe.toString()\n                            : 0\n                    ).format('0,0.00'),\n                'IPCO - $' +\n                    numeral(\n                        costsDifferences.costIpco !== undefined\n                            ? costsDifferences.costIpco.toString()\n                            : 0\n                    ).format('0,0.00')\n            ],\n            datasets: [\n                {\n                    label: 'Costo de consumo',\n                    backgroundColor: 'rgba(0, 179, 0, 0.3)',\n                    borderColor: 'rgba(0, 179, 0, 1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(0, 179, 0, 0.4)',\n                    hoverBorderColor: 'rgba(0, 179, 0, 1)',\n                    data: [costsDifferences.costCfe, costsDifferences.costIpco]\n                }\n            ]\n        };\n\n        const LoaderInfo = props => {\n            return (\n                <div\n                    style={{\n                        backgroundColor: 'white',\n                        width: 'auto',\n                        height: 'auto',\n                        marginBottom: 30,\n                        boxSizing: 'border-box',\n                        border: '1px solid #c8ced3'\n                    }}\n                >\n                    <div\n                        style={{\n                            padding: '1.25rem',\n                            marginTop: 17,\n                            alignContent: 'center',\n                            alignItems: 'center'\n                        }}\n                    >\n                        <BarLoader\n                            css={override}\n                            sizeUnit={'px'}\n                            size={60}\n                            color={'#023C52'}\n                            loading={this.state.loading}\n                        />\n                    </div>\n                </div>\n            );\n        };\n\n        const ChartLoaderInfo = props => {\n            return (\n                <div\n                    style={{\n                        backgroundColor: 'white',\n                        width: 911,\n                        height: 530,\n                        boxSizing: 'border-box',\n                        border: '1px solid #c8ced3',\n                        padding: '0px,20px'\n                    }}\n                >\n                    <div\n                        style={{\n                            padding: '1.25rem',\n                            marginTop: 250,\n                            alignContent: 'center',\n                            alignItems: 'center'\n                        }}\n                    >\n                        <BarLoader\n                            css={override}\n                            sizeUnit={'px'}\n                            size={60}\n                            color={'#023C52'}\n                            loading={this.state.loading}\n                        />\n                    </div>\n                </div>\n            );\n        };\n\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col xs=\"12\" sm=\"6\" lg=\"6\">\n                        <Select\n                            placeholder=\"-- Seleccione Centro de Carga\"\n                            name=\"empresa\"\n                            options={empresas}\n                            value={valueFromIdCompany(selectedEmpresa)}\n                            onChange={event =>\n                                this.onChangeEmpresa(event.value)\n                            }\n                        />\n                        <br />\n                    </Col>\n                </Row>\n\n                {selectedEmpresa ? (\n                    <div>\n                        {dataEnergy.labels !== [] &&\n                            dataEnergy.energyConsumptionData !== [] &&\n                            dataEnergy.reactiveEnergyConsumptionData !== []}\n\n                        <Row>\n                            <Col xs=\"12\" sm=\"6\" lg=\"6\">\n                                <Card>\n                                    <CardHeader>\n                                        ENERGÍA - kWh\n                                        <div className=\"card-header-actions\">\n                                            <a\n                                                href=\"http://ipco.com\"\n                                                className=\"card-header-action\"\n                                            >\n                                                <small className=\"text-muted\">\n                                                    kWh\n                                                </small>\n                                            </a>\n                                        </div>\n                                    </CardHeader>\n                                    <CardBody style={{ height: 470 }}>\n                                        <div className=\"chart-wrapper\">\n                                            {dataEnergy.labels.length != 0 ? (\n                                                <ChartEnergy\n                                                    labelsData={\n                                                        dataEnergy.labels\n                                                    }\n                                                    valuesData={\n                                                        dataEnergy.energyConsumptionData\n                                                    }\n                                                />\n                                            ) : (\n                                                <EmptyWidget height={'100%'} />\n                                            )}\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                            <Col xs=\"12\" sm=\"6\" lg=\"6\">\n                                <Card>\n                                    <CardHeader>\n                                        ENERGÍA REACTIVA - KVARh\n                                        <div className=\"card-header-actions\">\n                                            <a\n                                                href=\"http://ipco.com\"\n                                                className=\"card-header-action\"\n                                            >\n                                                <small className=\"text-muted\">\n                                                    KVARh\n                                                </small>\n                                            </a>\n                                        </div>\n                                    </CardHeader>\n                                    <CardBody style={{ height: 470 }}>\n                                        <div className=\"chart-wrapper\">\n                                            {dataEnergy.labels.length != 0 ? (\n                                                <ChartEnergy\n                                                    labelsData={\n                                                        dataEnergy.labels\n                                                    }\n                                                    valuesData={\n                                                        dataEnergy.reactiveEnergyConsumptionData\n                                                    }\n                                                />\n                                            ) : (\n                                                <EmptyWidget height={'100%'} />\n                                            )}\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs=\"12\" sm=\"4\" lg=\"4\">\n                                {powerFactorData !== undefined &&\n                                powerFactorData !== '' ? (\n                                    <WidgetCustom\n                                        color=\"primary\"\n                                        header={\n                                            String(\n                                                numeral(powerFactorData).format(\n                                                    '0,0.00'\n                                                )\n                                            ) || 'No existe información...'\n                                        }\n                                        mainText=\"Factor Potencia\"\n                                        smallText={\n                                            'Periodo anterior - ' +\n                                            currentMonth.toUpperCase()\n                                        }\n                                        value=\"0\"\n                                    />\n                                ) : (\n                                    <LoaderInfo />\n                                )}\n                            </Col>\n\n                            <Col xs=\"12\" md=\"4\" xl=\"4\">\n                                {dmaxima !== undefined && dmaxima !== '' ? (\n                                    <WidgetCustom\n                                        color=\"info\"\n                                        header={dmaxima + ' - kw'}\n                                        mainText=\"Demanda maxima\"\n                                        smallText=\"Demanda contratada 250 kw\"\n                                        value=\"0\"\n                                    />\n                                ) : (\n                                    <LoaderInfo />\n                                )}\n                            </Col>\n                            <Col xs=\"12\" md=\"4\" xl=\"4\">\n                                {costsDifferences.costIpco !== undefined ? (\n                                    <WidgetCustom\n                                        color=\"success\"\n                                        variant=\"inverse\"\n                                        header={\n                                            'Pago de ultimo periodo: $' +\n                                            numeral(\n                                                costsDifferences.costIpco !==\n                                                    undefined\n                                                    ? costsDifferences.costIpco.toString()\n                                                    : '0'\n                                            ).format('0,0.00')\n                                        }\n                                        mainText=\"Gracias\"\n                                        smallText=\"Ultima factura generada\"\n                                        value={\n                                            String(costsDifferences.costIpco) ||\n                                            '0'\n                                        }\n                                    />\n                                ) : (\n                                    <LoaderInfo />\n                                )}\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col xs=\"12\" md=\"12\" xl=\"12\">\n                                <Card>\n                                    <CardBody>\n                                        <h5 className=\"mb-0 card-title\">\n                                            Historial de facturación\n                                        </h5>\n                                        <br />\n                                        {invoicesHistory.length !== 0 ? (\n                                            <Table\n                                                hover\n                                                responsive\n                                                className=\"table-outline mb-0 d-none d-sm-table\"\n                                            >\n                                                <thead className=\"thead-light\">\n                                                    <tr>\n                                                        <th>Periodo</th>\n                                                        <th width=\"55%\">\n                                                            Detalle\n                                                        </th>\n                                                        <th className=\"text-center\">\n                                                            Recibo o factura\n                                                        </th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {invoicesHistory.length !==\n                                                        0 &&\n                                                    invoicesHistory !==\n                                                        undefined\n                                                        ? invoicesHistory.map(\n                                                              (item, index) => (\n                                                                  <tr\n                                                                      key={\n                                                                          item._id\n                                                                      }\n                                                                  >\n                                                                      <td>\n                                                                          <div>\n                                                                              {item.mes !==\n                                                                              undefined\n                                                                                  ? item.mes.toUpperCase()\n                                                                                  : ' -- '}\n                                                                          </div>\n                                                                          <small className=\"text-muted\">\n                                                                              Pendiente\n                                                                              de\n                                                                              Pago\n                                                                          </small>\n                                                                      </td>\n                                                                      <td>\n                                                                          <div className=\"clearfix\">\n                                                                              <div className=\"float-left\">\n                                                                                  <strong>\n                                                                                      Energía\n                                                                                  </strong>\n                                                                              </div>\n                                                                              <div className=\"float-right\">\n                                                                                  <small\n                                                                                      className=\"text-muted\"\n                                                                                      style={{\n                                                                                          fontSize: 13\n                                                                                      }}\n                                                                                  >\n                                                                                      $\n                                                                                      {numeral(\n                                                                                          item\n                                                                                              .breakdown\n                                                                                              .energy !==\n                                                                                              undefined\n                                                                                              ? item\n                                                                                                    .breakdown\n                                                                                                    .energy\n                                                                                              : 0\n                                                                                      ).format(\n                                                                                          '0,0.00'\n                                                                                      )}\n                                                                                  </small>\n                                                                              </div>\n                                                                          </div>\n                                                                          <div className=\"clearfix\">\n                                                                              <div className=\"float-left\">\n                                                                                  <strong>\n                                                                                      IVA\n                                                                                      16%\n                                                                                  </strong>\n                                                                              </div>\n                                                                              <div className=\"float-right\">\n                                                                                  <small\n                                                                                      className=\"text-muted\"\n                                                                                      style={{\n                                                                                          fontSize: 13\n                                                                                      }}\n                                                                                  >\n                                                                                      ${' '}\n                                                                                      {numeral(\n                                                                                          item\n                                                                                              .breakdown\n                                                                                              .iva !==\n                                                                                              undefined\n                                                                                              ? item\n                                                                                                    .breakdown\n                                                                                                    .iva\n                                                                                              : 0\n                                                                                      ).format(\n                                                                                          '0,0.00'\n                                                                                      )}\n                                                                                  </small>\n                                                                              </div>\n                                                                          </div>\n                                                                          <div className=\"clearfix\">\n                                                                              <div className=\"float-left\">\n                                                                                  <strong>\n                                                                                      Fact\n                                                                                      del\n                                                                                      Periodo\n                                                                                  </strong>\n                                                                              </div>\n                                                                              <div className=\"float-right\">\n                                                                                  <small\n                                                                                      className=\"text-muted\"\n                                                                                      style={{\n                                                                                          fontSize: 13\n                                                                                      }}\n                                                                                  >\n                                                                                      $\n                                                                                      {numeral(\n                                                                                          item\n                                                                                              .breakdown\n                                                                                              .powerFactor !==\n                                                                                              undefined\n                                                                                              ? item\n                                                                                                    .breakdown\n                                                                                                    .powerFactor\n                                                                                              : 0\n                                                                                      ).format(\n                                                                                          '0,0.00'\n                                                                                      )}\n                                                                                  </small>\n                                                                              </div>\n                                                                          </div>\n                                                                          <div className=\"clearfix\">\n                                                                              <div className=\"float-left\">\n                                                                                  <strong>\n                                                                                      Total\n                                                                                  </strong>\n                                                                              </div>\n                                                                              <div className=\"float-right\">\n                                                                                  <strong>\n                                                                                      $\n                                                                                      {numeral(\n                                                                                          item\n                                                                                              .breakdown\n                                                                                              .total !==\n                                                                                              undefined\n                                                                                              ? item\n                                                                                                    .breakdown\n                                                                                                    .total\n                                                                                              : 0\n                                                                                      ).format(\n                                                                                          '0,0.00'\n                                                                                      )}\n                                                                                  </strong>\n                                                                              </div>\n                                                                          </div>\n                                                                      </td>\n                                                                      <td className=\"text-center\">\n                                                                          <i\n                                                                              className=\"fa fa-file-pdf-o\"\n                                                                              style={{\n                                                                                  fontSize:\n                                                                                      24 +\n                                                                                      'px'\n                                                                              }}\n                                                                          />\n                                                                          <i\n                                                                              className=\"fa fa-file-code-o\"\n                                                                              style={{\n                                                                                  fontSize:\n                                                                                      24 +\n                                                                                      'px',\n                                                                                  marginLeft: 15\n                                                                              }}\n                                                                          />\n                                                                      </td>\n                                                                  </tr>\n                                                              )\n                                                          )\n                                                        : null}\n                                                </tbody>\n                                            </Table>\n                                        ) : (\n                                            <EmptyWidget paddingTop={'75px'} />\n                                        )}\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                        {this.state.recordSelected === false &&\n                        costsDifferences.costCfe > costsDifferences.costIpco &&\n                        costsDifferences.costIpco !== 0 &&\n                        costsDifferences.costCfe !== 0 ? (\n                            <Row>\n                                <Col xs=\"12\" sm=\"2\" lg=\"2\" />\n                                <Col xs=\"12\" sm=\"5\" lg=\"5\">\n                                    <Card>\n                                        <CardBody>\n                                            <Row>\n                                                <Col sm=\"12\">\n                                                    <CardTitle className=\"mb-0\">\n                                                        Descubre los beneficios\n                                                        que IPCO te ofrece\n                                                    </CardTitle>\n                                                    <div className=\"small text-muted\">\n                                                        Ahorro respecto a CFE\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                            <div className=\"chart-wrapper\">\n                                                <Bar\n                                                    data={barCostsDifferences}\n                                                    options={options}\n                                                />\n                                            </div>\n                                        </CardBody>\n                                        <CardFooter>\n                                            <Row>\n                                                <Col xs=\"6\" md=\"8\" xl=\"8\" />\n                                                <Col xs=\"6\" md=\"4\" xl=\"4\">\n                                                    <Button\n                                                        block\n                                                        color=\"secondary\"\n                                                        className=\"btn-square\"\n                                                        onClick={() =>\n                                                            this.onStateChart(\n                                                                true\n                                                            )\n                                                        }\n                                                    >\n                                                        Historial\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        </CardFooter>\n                                    </Card>\n                                </Col>\n                                <Col xs=\"12\" sm=\"3\" lg=\"3\">\n                                    <WidgetCustom\n                                        color=\"success\"\n                                        variant=\"inverse\"\n                                        header={\n                                            '$' +\n                                            numeral(\n                                                costsDifferences.costCfe !==\n                                                    undefined\n                                                    ? costsDifferences.costCfe.toString()\n                                                    : '0'\n                                            ).format('0,0.00')\n                                        }\n                                        mainText=\"Costo CFE\"\n                                        smallText=\"Moneda mexicana\"\n                                        value={\n                                            costsDifferences.costCfe !==\n                                            undefined\n                                                ? costsDifferences.costCfe.toString()\n                                                : '0'\n                                        }\n                                    />\n                                    <WidgetCustom\n                                        color=\"default\"\n                                        header={\n                                            '$' +\n                                            numeral(\n                                                costsDifferences.costIpco !==\n                                                    undefined\n                                                    ? costsDifferences.costIpco.toString()\n                                                    : '0'\n                                            ).format('0,0.00')\n                                        }\n                                        mainText=\"Costo IPCO\"\n                                        smallText=\"Moneda mexicana\"\n                                        value={\n                                            costsDifferences.costIpco !==\n                                            undefined\n                                                ? costsDifferences.costIpco.toString()\n                                                : '0'\n                                        }\n                                    />\n                                    <WidgetCustom\n                                        color=\"warning\"\n                                        variant=\"inverse\"\n                                        header={\n                                            'AHORRO: $' +\n                                            numeral(\n                                                costsDifferences.totalSaved !==\n                                                    undefined\n                                                    ? costsDifferences.totalSaved.toString()\n                                                    : '0'\n                                            ).format('0,0.00')\n                                        }\n                                        mainText=\"Su ahorro respecto a CFE\"\n                                        smallText=\"Moneda mexicana\"\n                                        value={\n                                            costsDifferences.totalSaved !==\n                                            undefined\n                                                ? costsDifferences.totalSaved.toString()\n                                                : '0'\n                                        }\n                                    />\n                                </Col>\n                            </Row>\n                        ) : null}\n                        {this.state.recordSelected === true ? (\n                            <Row>\n                                <Col>\n                                    <Card>\n                                        <CardBody>\n                                            <Row>\n                                                <Col sm=\"5\">\n                                                    <CardTitle className=\"mb-0\">\n                                                        HISTORIAL DE AHORRO\n                                                        RESPECTO CFE - 2018\n                                                    </CardTitle>\n                                                    <div className=\"small text-muted\">\n                                                        Descubre los beneficios\n                                                        de los servicios IPCO\n                                                    </div>\n                                                </Col>\n                                                <Col\n                                                    sm=\"7\"\n                                                    className=\"d-none d-sm-inline-block\"\n                                                >\n                                                    <Button\n                                                        color=\"primary\"\n                                                        className=\"float-right\"\n                                                    >\n                                                        <i className=\"icon-cloud-download\" />\n                                                    </Button>\n                                                    <ButtonToolbar\n                                                        className=\"float-right\"\n                                                        aria-label=\"Toolbar with button groups\"\n                                                    >\n                                                        <ButtonGroup\n                                                            className=\"mr-3\"\n                                                            aria-label=\"First group\"\n                                                        >\n                                                            <Button\n                                                                color=\"outline-secondary\"\n                                                                onClick={() =>\n                                                                    this.onRadioBtnClick(\n                                                                        2\n                                                                    )\n                                                                }\n                                                                active={\n                                                                    this.state\n                                                                        .radioSelected ===\n                                                                    2\n                                                                }\n                                                            >\n                                                                Mes\n                                                            </Button>\n                                                            <Button\n                                                                color=\"outline-secondary\"\n                                                                onClick={() =>\n                                                                    this.onRadioBtnClick(\n                                                                        3\n                                                                    )\n                                                                }\n                                                                active={\n                                                                    this.state\n                                                                        .radioSelected ===\n                                                                    3\n                                                                }\n                                                            >\n                                                                Año\n                                                            </Button>\n                                                        </ButtonGroup>\n                                                    </ButtonToolbar>\n                                                </Col>\n                                            </Row>\n                                            <div\n                                                className=\"chart-wrapper\"\n                                                style={{\n                                                    height: 300 + 'px',\n                                                    marginTop: 40 + 'px'\n                                                }}\n                                            >\n                                                <Line\n                                                    data={mainChart}\n                                                    options={mainChartOptsBar}\n                                                />\n                                            </div>\n                                        </CardBody>\n                                        <CardFooter>\n                                            <Row>\n                                                <Col xs=\"6\" md=\"8\" xl=\"8\" />\n                                                <Col xs=\"6\" md=\"4\" xl=\"4\">\n                                                    <Button\n                                                        block\n                                                        color=\"secondary\"\n                                                        className=\"btn-square\"\n                                                        onClick={() =>\n                                                            this.onStateChart(\n                                                                false\n                                                            )\n                                                        }\n                                                    >\n                                                        Cerrar\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        </CardFooter>\n                                    </Card>\n                                </Col>\n                            </Row>\n                        ) : null}\n                    </div>\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import Init from \"./Init\";\n\nexport default Init;\n"],"sourceRoot":""}