{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js","views/Client/ClientForm.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__webpack_require__","d","__webpack_exports__","_objectSpread","_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","ClientForm","props","_this2","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__","this","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__","call","getOptionsSelect","_ref","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","name","url","optionCreateFunction","response","options","wrap","_context","prev","next","feathers","service","find","sent","data","map","option","push","setState","optionsSelect","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","state","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","_x","_x2","_x3","apply","onChange","path","newFormData","immutable","set","formData","onAdd","_ref2","_callee2","_this","clientResult","_context2","_Users_eddzmaciel_Documents_www_Repositorios_aida_munecas_aida_munecas_panel_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","form","reportValidity","id","create","console","log","undefined","_id","window","location","href","patch","_x4","onSend","_ref3","_callee3","_context3","_x5","onAddOption","newState","removeOption","indexContacto","del","match","params","total","nombre","telefono","email","tipoUsuario","actaConstitutiva","direccionFactura","rfc","calle","numeroInterior","numeroExterior","colonia","cp","ciudad","estado","pais","carga","generador","tipo","contactos","openSuccess","tipoUsuarios","paises","estados","ciudades","tipos","label","query","findClient","_this3","_this$state","valueFromId","o","react__WEBPACK_IMPORTED_MODULE_10___default","createElement","className","ref","reactstrap__WEBPACK_IMPORTED_MODULE_11__","col","sm","md","onClick","color","xs","lg","htmlFor","type","event","react_select__WEBPACK_IMPORTED_MODULE_16__","placeholder","contacto","index","bsStyle","Component"],"mappings":"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","file":"static/js/19.059053d2.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import React, {Component} from 'react';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  FormGroup,\n  FormText,\n  Label,\n  Row,\n  Button,\n  Input,\n} from 'reactstrap';\nimport feathers from '../../feathers';\nimport axios from 'axios';\nimport immutable from 'object-path-immutable';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Select from 'react-select';\n\nclass ClientForm extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      id: props.match.params.id,\n      data: [],\n      total: 0,\n      formData: {\n        nombre: '',\n        telefono: '',\n        email: '',\n        tipoUsuario: '',\n        actaConstitutiva: '',\n        direccionFactura: {\n          rfc: '',\n          calle: '',\n          numeroInterior: '',\n          numeroExterior: '',\n          colonia: '',\n          cp: '',\n          ciudad: '',\n          estado: '',\n          pais: '',\n        },\n        carga: '',\n        generador: '',\n        tipo: '',\n        contactos: [\n          {\n            nombre: '',\n            telefono: '',\n            email: '',\n          },\n        ],\n      },\n      openSuccess: false,\n\n      tipoUsuarios: [],\n\n      paises: [],\n      estados: [],\n      ciudades: [],\n    };\n  }\n\n  async componentWillMount () {\n    console.log ('id', this.state.id);\n    var _this = this;\n\n    var tipos = await feathers.service ('types').find ({});\n    console.log ('Tipos:', tipos);\n\n    tipos = tipos.data.map (tipo => {\n      return {\n        value: tipo._id,\n        label: tipo.nombre,\n      };\n    });\n\n    if (this.state.id != 'form') {\n      var findClient = await feathers.service ('clients').find ({\n        query: {\n          _id: _this.state.id,\n        },\n      });\n\n      this.setState ({\n        formData: {\n          nombre: findClient.data[0].nombre,\n          telefono: findClient.data[0].telefono,\n          email: findClient.data[0].email,\n          tipoUsuario: findClient.data[0].tipoUsuario,\n          actaConstitutiva: findClient.data[0].actaConstitutiva,\n          direccionFactura: {\n            rfc: findClient.data[0].direccionFactura.rfc,\n            calle: findClient.data[0].direccionFactura.calle,\n            numeroInterior: findClient.data[0].direccionFactura.numeroInterior,\n            numeroExterior: findClient.data[0].direccionFactura.numeroExterior,\n            colonia: findClient.data[0].direccionFactura.colonia,\n            cp: findClient.data[0].direccionFactura.cp,\n            ciudad: findClient.data[0].direccionFactura.ciudad,\n            estado: findClient.data[0].direccionFactura.estado,\n            pais: findClient.data[0].direccionFactura.pais,\n          },\n          carga: findClient.data[0].carga,\n          generador: findClient.data[0].generador,\n          tipo: findClient.data[0].tipo,\n          contactos: findClient.data[0].contactos,\n        },\n        tipoUsuarios: tipos,\n      });\n    } else {\n      this.setState ({\n        tipoUsuarios: tipos,\n      });\n    }\n  }\n\n  getOptionsSelect = async (name, url, optionCreateFunction) => {\n    var response = await feathers.service (url).find ({});\n    var options = [];\n    response.data.map (option => {\n      options.push (optionCreateFunction (option));\n    });\n    this.setState ({\n      optionsSelect: {\n        ...this.state.optionsSelect,\n        [name]: options,\n      },\n    });\n  };\n\n  onChange = (path, value) => {\n    var newFormData = immutable.set (this.state.formData, path, value);\n\n    this.setState ({\n      formData: newFormData,\n    });\n  };\n\n  onAdd = async formData => {\n    let _this = this;\n\n    if (this.form.reportValidity ()) {\n      if (this.state.id == 'form') {\n        let clientResult = await feathers\n          .service ('clients')\n          .create (_this.state.formData);\n        console.log ('clientResult', clientResult);\n        if (clientResult._id != undefined) {\n          window.location.href = '/#/clientes';\n        }\n      } else {\n        let clientResult = await feathers\n          .service ('clients')\n          .patch (_this.state.id, _this.state.formData);\n        if (clientResult._id != undefined) {\n          window.location.href = '/#/clientes';\n        }\n      }\n    }\n  };\n\n  onSend = async formData => {\n    let _this = this;\n    console.log ('Enviando...');\n  };\n\n  onAddOption = () => {\n    var newState = immutable.push (this.state, 'formData.contactos', {});\n    this.setState (newState);\n  };\n\n  removeOption = indexContacto => () => {\n    var newFormData = immutable.del (this.state.formData, [\n      'contactos',\n      indexContacto,\n    ]);\n    this.setState ({\n      formData: newFormData,\n    });\n  };\n\n  render () {\n    var indexNumber = 0;\n    var {\n      formData,\n      openSuccess,\n      tipoUsuarios,\n      paises,\n      estados,\n      ciudades,\n    } = this.state;\n\n    const valueFromId = id => tipoUsuarios.find (o => o.value === id);\n\n    return (\n      <div className=\"animated fadeIn\">\n        <form ref={ref => (this.form = ref)} className=\"form-horizontal\">\n          <Row>\n            <Col col=\"12\" sm=\"12\" md=\"12\">\n              <Button\n                onClick={this.onAdd}\n                color=\"success\"\n                className=\"btn-square pull-right\"\n              >\n                <i className=\"fa fa-save\" /> Guardar\n              </Button>\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col xs=\"12\" lg=\"5\">\n              <Card>\n                <CardHeader>\n                  Alta de Clientes\n                  <div className=\"card-header-actions\">\n                    <i className=\"fa fa-download\" />\n                    <a href=\"http://ipco.com\" className=\"card-header-action\">\n                      <small className=\"text-muted\">Activo</small>\n                    </a>\n                  </div>\n                </CardHeader>\n                <CardBody>\n                  <h4>Información General</h4>\n                  <br />\n                  <FormGroup>\n                    <Label htmlFor=\"hf-email\">Nombre</Label>\n                    <Input\n                      type=\"text\"\n                      id=\"nombre\"\n                      name=\"nombre\"\n                      value={formData.nombre}\n                      onChange={event =>\n                        this.onChange ('nombre', event.target.value)}\n                    />\n                    <FormText className=\"help-block\">\n                      Nombre completo de la empresa\n                    </FormText>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label htmlFor=\"hf-email\">Teléfono</Label>\n                    <Input\n                      type=\"text\"\n                      id=\"telefono\"\n                      value={formData.telefono}\n                      onChange={event =>\n                        this.onChange ('telefono', event.target.value)}\n                    />\n                    <FormText className=\"help-block\">+52 123 456 7890</FormText>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label htmlFor=\"hf-email\">Correo</Label>\n                    <Input\n                      type=\"text\"\n                      id=\"email\"\n                      value={formData.email}\n                      onChange={event =>\n                        this.onChange ('email', event.target.value)}\n                    />\n                    <FormText className=\"help-block\">ejemplo@ipco.com</FormText>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label htmlFor=\"hf-email\">Acta Constitutiva</Label>\n                    <Input\n                      type=\"file\"\n                      id=\"actaConstitutiva\"\n                      value={formData.actaConstitutiva}\n                      onChange={event =>\n                        this.onChange ('actaConstitutiva', event.target.value)}\n                    />\n                    <FormText className=\"help-block\">\n                      Es necesario subir el documento\n                    </FormText>\n                  </FormGroup>\n                  <hr />\n                  <FormGroup>\n                    <Label htmlFor=\"hf-email\">Tipo de cliente</Label>\n                    <Select\n                      placeholder=\"-- Seleccionar\"\n                      name=\"tipoUsuario\"\n                      value={valueFromId (formData.tipoUsuario)}\n                      options={tipoUsuarios}\n                      onChange={event =>\n                        this.onChange ('tipoUsuario', event.value)}\n                    />\n                    <FormText className=\"help-block\">\n                      Seleccione el tipo de cliente\n                    </FormText>\n                  </FormGroup>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xs=\"12\" lg=\"7\">\n              <Card>\n                <CardHeader>\n                  Información Físcal\n                  <div className=\"card-header-actions\">\n                    <i className=\"fa fa-list\" />\n                    <a href=\"http://ipco.com\" className=\"card-header-action\">\n                      <small className=\"text-muted\">Listado</small>\n                    </a>\n                  </div>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col md={6}>\n                      <FormGroup>\n                        <Label htmlFor=\"hf-email\">RFC</Label>\n                        <Input\n                          type=\"text\"\n                          id=\"rfc\"\n                          value={formData.direccionFactura.rfc}\n                          onChange={event =>\n                            this.onChange (\n                              ['direccionFactura', 'rfc'],\n                              event.target.value\n                            )}\n                        />\n                        <FormText className=\"help-block\">\n                          Ingrese un RFC valido\n                        </FormText>\n                      </FormGroup>\n                    </Col>\n                    <Col md={6} />\n                    <Col md={6}>\n                      <FormGroup>\n                        <Label htmlFor=\"hf-email\">Pais</Label>\n                        <Select\n                          placeholder=\"-- Seleccione Pais\"\n                          name=\"pais\"\n                          value={valueFromId (formData.direccionFactura.pais)}\n                          options={paises}\n                          onChange={event =>\n                            this.onChange (\n                              ['direccionFactura', 'pais'],\n                              event.value\n                            )}\n                        />\n                        <FormText className=\"help-block\">\n                          Campo obligatorio\n                        </FormText>\n                      </FormGroup>\n                      <FormGroup>\n                        <Label htmlFor=\"hf-email\">Estado</Label>\n                        <Select\n                          placeholder=\"-- Seleccionar Estado\"\n                          value={valueFromId (formData.direccionFactura.estado)}\n                          options={estados}\n                          onChange={event =>\n                            this.onChange (\n                              ['direccionFactura', 'estado'],\n                              event.value\n                            )}\n                        />\n                        <FormText className=\"help-block\">\n                          Campo obligatorio\n                        </FormText>\n                      </FormGroup>\n                    </Col>\n                    <Col md={6}>\n                      <FormGroup>\n                        <Label htmlFor=\"hf-email\">Ciudad</Label>\n                        <Select\n                          placeholder=\"-- Seleccionar Ciudad\"\n                          value={valueFromId (formData.direccionFactura.ciudad)}\n                          options={ciudades}\n                          onChange={event =>\n                            this.onChange (\n                              ['direccionFactura', 'ciudad'],\n                              event.value\n                            )}\n                        />\n                        <FormText className=\"help-block\">\n                          Campo obligatorio\n                        </FormText>\n                      </FormGroup>\n                      <FormGroup>\n                        <Label htmlFor=\"hf-email\">Colonia</Label>\n                        <Input\n                          type=\"text\"\n                          id=\"colonia\"\n                          value={formData.direccionFactura.colonia}\n                          onChange={event =>\n                            this.onChange (\n                              ['direccionFactura', 'colonia'],\n                              event.target.value\n                            )}\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md={6}>\n                      <FormGroup>\n                        <Label htmlFor=\"hf-email\">Calle</Label>\n                        <Input\n                          type=\"text\"\n                          id=\"calle\"\n                          value={formData.direccionFactura.calle}\n                          onChange={event =>\n                            this.onChange (\n                              ['direccionFactura', 'calle'],\n                              event.target.value\n                            )}\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <Label htmlFor=\"hf-email\">Código Postal</Label>\n                        <Input\n                          type=\"text\"\n                          id=\"cp\"\n                          value={formData.direccionFactura.cp}\n                          onChange={event =>\n                            this.onChange (\n                              ['direccionFactura', 'cp'],\n                              event.target.value\n                            )}\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md={6}>\n                      <FormGroup>\n                        <Label htmlFor=\"hf-email\">No Exterior</Label>\n                        <Input\n                          type=\"text\"\n                          id=\"numeroExterior\"\n                          value={formData.direccionFactura.numeroExterior}\n                          onChange={event =>\n                            this.onChange (\n                              ['direccionFactura', 'numeroExterior'],\n                              event.target.value\n                            )}\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <Label htmlFor=\"hf-email\">No Interior</Label>\n                        <Input\n                          type=\"text\"\n                          id=\"numeroInterior\"\n                          value={formData.direccionFactura.numeroInterior}\n                          onChange={event =>\n                            this.onChange (\n                              ['direccionFactura', 'numeroInterior'],\n                              event.target.value\n                            )}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              {/* {//DONE Paty - Hacer funcionalidad paa cargar multiples} */}\n              <Card>\n                <CardHeader>\n                  Contactos\n                  <div className=\"card-header-actions\">\n                    <i className=\"fa fa-list\" />\n                    <a href=\"http://ipco.com\" className=\"card-header-action\">\n                      <small className=\"text-muted\">Listado</small>\n                    </a>\n                  </div>\n                </CardHeader>\n                <CardBody>\n                  {formData.contactos.map ((contacto, index) => (\n                    <Row key={index + 2}>\n                      <Col md={3}>\n                        <FormGroup>\n                          <Label htmlFor=\"hf-email\">Nombre</Label>\n                          <Input\n                            type=\"text\"\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            value={formData.contactos[index].nombre}\n                            onChange={event =>\n                              this.onChange (\n                                ['contactos', index, 'nombre'],\n                                event.target.value\n                              )}\n                          />\n                          <FormText className=\"help-block\">\n                            Nombre Completo *Obligatorio\n                          </FormText>\n                        </FormGroup>\n                      </Col>\n                      <Col md={3}>\n                        <FormGroup>\n                          <Label htmlFor=\"hf-email\">Correo</Label>\n                          <Input\n                            type=\"text\"\n                            id=\"email\"\n                            name=\"email\"\n                            value={formData.contactos[index].email}\n                            onChange={event =>\n                              this.onChange (\n                                ['contactos', index, 'email'],\n                                event.target.value\n                              )}\n                          />\n                          <FormText className=\"help-block\">\n                            Correo electronico *Obligatorio\n                          </FormText>\n                        </FormGroup>\n                      </Col>\n                      <Col md={3}>\n                        <FormGroup>\n                          <Label htmlFor=\"hf-email\">Telefono</Label>\n                          <Input\n                            type=\"text\"\n                            id=\"telefono\"\n                            name=\"telefono\"\n                            value={formData.contactos[index].telefono}\n                            onChange={event =>\n                              this.onChange (\n                                ['contactos', index, 'telefono'],\n                                event.target.value\n                              )}\n                          />\n                          <FormText className=\"help-block\">\n                            +52 123 456 7890\n                          </FormText>\n                        </FormGroup>\n                      </Col>\n                      {formData.contactos.length > index &&\n                        <Col md={1}>\n                          <label htmlFor=\"addContacto\">&nbsp;</label>\n                          <div className=\"form-group\">\n                            <Button\n                              bsStyle=\"danger\"\n                              onClick={this.removeOption (index)}\n                            >\n                              -\n                            </Button>\n                          </div>\n                        </Col>}\n                      {formData.contactos.length - 1 == index &&\n                        <Col md={1}>\n                          <label htmlFor=\"addContacto\">&nbsp;</label>\n                          <div className=\"form-group\">\n                            <Button\n                              bsStyle=\"primary\"\n                              onClick={this.onAddOption}\n                            >\n                              +\n                            </Button>\n                          </div>\n                        </Col>}\n                    </Row>\n                  ))}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ClientForm;\n"],"sourceRoot":""}